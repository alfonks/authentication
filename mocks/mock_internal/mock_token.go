// Code generated by MockGen. DO NOT EDIT.
// Source: token.go

// Package mock_internal is a generated GoMock package.
package mock_internal

import (
	context "context"
	entity "deall-alfon/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenUseCase is a mock of TokenUseCase interface.
type MockTokenUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockTokenUseCaseMockRecorder
}

// MockTokenUseCaseMockRecorder is the mock recorder for MockTokenUseCase.
type MockTokenUseCaseMockRecorder struct {
	mock *MockTokenUseCase
}

// NewMockTokenUseCase creates a new mock instance.
func NewMockTokenUseCase(ctrl *gomock.Controller) *MockTokenUseCase {
	mock := &MockTokenUseCase{ctrl: ctrl}
	mock.recorder = &MockTokenUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenUseCase) EXPECT() *MockTokenUseCaseMockRecorder {
	return m.recorder
}

// GenerateTokenPair mocks base method.
func (m *MockTokenUseCase) GenerateTokenPair(ctx context.Context, user entity.AdminUser) (entity.Tokens, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateTokenPair", ctx, user)
	ret0, _ := ret[0].(entity.Tokens)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateTokenPair indicates an expected call of GenerateTokenPair.
func (mr *MockTokenUseCaseMockRecorder) GenerateTokenPair(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateTokenPair", reflect.TypeOf((*MockTokenUseCase)(nil).GenerateTokenPair), ctx, user)
}
